import os, os.path, sys

if len(sys.argv) < 2:
	sys.exit(-1)

path = sys.argv[1]
if not os.path.exists:
	sys.stderr.write("error: " + path + " does not exist");
	sys.exit(1)

file = open(path, "rb");
buf = file.read();
file.close()

fname = os.path.split(path)[1].replace(" ", "_").replace(".", "_").replace("-", "_");

file = open(path + ".gen.c", "w");

file.write("""//generated by data2c.py; don't modify
#include <stddef.h>
#include <stdint.h>

""");
file.write("unsigned char _%s_data[] = \n" % fname)

file.write('\t"')

col = 0;

for b in buf:
	#for 2.7x compatibility (hopefully. . .)
	if type(b) == str:
		b = ord(b)
	
	if b > 31 and b < 127:
		file.write(chr(b))
	elif b == ord('\n'):
		file.write('"\n\t"')
		col = 0
	elif b == ord('\t'):
		file.write('\t')
	elif b == ord('\r'):
		#ignore \r
		pass
	else:
		h = hex(b)
		if h.lower().startswith("0x"):
			h = h[2:]

		while len(h) < 2:
			h = "0" + h

		file.write(r"\x" + h)
		col += len(h) + 2

	col += 1
	if col > 55:
		file.write('"\n\t"')
		col = 0

file.write(r"\0"); #add paranoia null terminator byte
file.write('";\n')
file.write("const size_t _%s_size = %d;\n" % (fname, len(buf)));

file.close()
